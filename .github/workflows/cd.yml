name: CD
on:
  workflow_call:
    inputs:
      tag:
        required: true
        type: string
      push:
        required: true
        type: string
jobs:
  publish-release:
    if: ${{ startsWith(github.ref, 'refs/tags/') }}
    runs-on: ubuntu-latest
    timeout-minutes: 10
    permissions:
      contents: read
      id-token: write
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Update CHANGELOG
        id: changelog
        uses: requarks/changelog-action@v1
        with:
          token: ${{ github.token }}
          tag: ${{ github.ref_name }}
          writeToFile: false
          includeRefIssues: false
      - name: Fetch release artifact
        uses: actions/download-artifact@v4
        with:
          name: localllmrag
          path: dist

      - name: Upload an Asset in GitHub Release
        uses: "actions/github-script@v6"
        with:
          github-token: "${{ secrets.GITHUB_TOKEN }}"
          script: |
            const fs = require('fs').promises;
            await github.rest.repos.uploadReleaseAsset({
              name: 'localllmrag-${{ inputs.tag }}.tar.gz',
              owner: context.repo.owner,
              repo: context.repo.repo,
              release_id: ${{ env.RELEASE_ID }},
              data: await fs.readFile('dist/*.tar.gz')
            });
            await github.rest.repos.uploadReleaseAsset({
              name: 'localllmrag-${{ inputs.tag }}-py3-none-any.whl',
              owner: context.repo.owner,
              repo: context.repo.repo,
              release_id: ${{ env.RELEASE_ID }},
              data: await fs.readFile('dist/*.whl')
            });

      - name: Publish to PyPI
        uses: pypa/gh-action-pypi-publish@release/v1
        with:
          token: ${{ secrets.PYPI_API_TOKEN }}
          #repository-url: https://upload.pypi.org/legacy/
          repository-url: https://test.pypi.org/legacy/